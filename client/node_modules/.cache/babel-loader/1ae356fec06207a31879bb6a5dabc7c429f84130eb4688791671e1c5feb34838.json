{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\POOJA\\\\Newtask1\\\\client\\\\src\\\\Components\\\\Addtask\\\\Addtask.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useAuth } from \"../Store/authh\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Addtask = () => {\n  _s();\n  const [questionText, setQuestionText] = useState(\"\");\n  const [userID, setUserID] = useState(\"\");\n  const [tasks, setTasks] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [userAnswer, setUserAnswer] = useState(\"\");\n  const [timeLeft, setTimeLeft] = useState(null);\n  const [mistakes, setMistakes] = useState(0);\n  const [status, setStatus] = useState(0);\n  const [taskStarted, setTaskStarted] = useState(false);\n  const navigate = useNavigate();\n  const {\n    UserIDFROMLSGet,\n    logout\n  } = useAuth();\n  useEffect(() => {\n    const storedUserID = UserIDFROMLSGet();\n    if (storedUserID) {\n      setUserID(storedUserID);\n    } else {\n      console.error(\"No userID found in local storage.\");\n      toast.error(\"Failed to retrieve user ID. Please log in again.\");\n      navigate(\"/login\");\n    }\n  }, [UserIDFROMLSGet, navigate]);\n  useEffect(() => {\n    if (userID) {\n      fetchTasks();\n    }\n  }, [userID]);\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch(`/api/authh/alltaskget/${userID}`);\n      if (response.ok) {\n        const fetchedTasks = await response.json();\n        console.log(\"p1\", fetchedTasks);\n        setTasks(fetchedTasks.tasks);\n      } else {\n        const result = await response.json();\n        toast.error(result.message || \"Failed to fetch tasks\");\n      }\n    } catch (error) {\n      toast.error(\"An error occurred while fetching tasks.\");\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const taskData = {\n      questionText,\n      userID\n    };\n    try {\n      const response = await fetch(\"/api/authh/createtask\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(taskData)\n      });\n      const result = await response.json();\n      if (response.ok) {\n        toast.success(\"Task created successfully!\");\n        setQuestionText(\"\");\n        setShowForm(false);\n        fetchTasks();\n      } else {\n        toast.error(result.message || \"Failed to create task\");\n      }\n    } catch (error) {\n      toast.error(\"An error occurred while creating the task.\");\n    }\n  };\n  const handleTaskClick = task => {\n    if (task.status !== \"Not Completed\") {\n      toast.error(\"Task is already completed.\");\n      return;\n    }\n    setCurrentTask(task);\n    setUserAnswer(\"\"); // Reset the answer field\n    setMistakes(0); // Reset mistakes\n    setTaskStarted(false); // Reset task started state\n    setTimeLeft(null); // Reset the timer\n    setShowForm(false);\n  };\n  const startTask = () => {\n    if (currentTask) {\n      setTimeLeft(30); // Start 30-second countdown\n      setTaskStarted(true); // Indicate that the task has started\n    }\n  };\n  useEffect(() => {\n    if (timeLeft === null) return;\n    if (timeLeft <= 0) {\n      handleTaskUpdate();\n      return;\n    }\n    const timer = setInterval(() => {\n      setTimeLeft(prev => prev - 1);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n  useEffect(() => {\n    countMistakes();\n  }, [userAnswer]);\n  const countMistakes = () => {\n    if (!currentTask) return 0;\n    const correctWords = currentTask.questionText.split(\" \");\n    const answerWords = userAnswer.trim().split(\" \");\n    let mistakes = 0;\n    for (let i = 0; i < correctWords.length; i++) {\n      if (answerWords[i] !== correctWords[i]) {\n        mistakes++;\n      }\n    }\n    setMistakes(mistakes);\n    return mistakes;\n  };\n  const handleTaskUpdate = async () => {\n    try {\n      const mistakesCount = countMistakes();\n      const statuss = mistakesCount === 0 ? \"Passed\" : \"Failed\";\n      const response = await fetch(`/api/authh/updatetask/${currentTask._id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          answer: userAnswer,\n          mistakes: mistakesCount,\n          status: statuss\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        setStatus(statuss); // Show the status immediately\n        setTimeout(() => {\n          setStatus(null); // Reset status after a short delay\n          setCurrentTask(null);\n          setUserAnswer(\"\");\n          setTimeLeft(null);\n          fetchTasks();\n        }, 2000);\n      } else {\n        setStatus(\"Error\");\n      }\n    } catch (error) {\n      setStatus(\"Error\");\n    }\n  };\n  const handleLogout = () => {\n    logout(); // Clear the user session and data\n    toast.success(\"Logged out successfully!\");\n    navigate(\"/\"); // Redirect to the registration page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      minHeight: \"100vh\",\n      backgroundColor: \"#f5f5f5\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      style: {\n        position: \"absolute\",\n        top: \"10px\",\n        right: \"20px\",\n        backgroundColor: \"#e74c3c\",\n        color: \"#ecf0f1\",\n        padding: \"10px 20px\",\n        border: \"none\",\n        borderRadius: \"5px\",\n        cursor: \"pointer\",\n        fontSize: \"16px\"\n      },\n      onMouseOver: e => e.currentTarget.style.backgroundColor = \"#c0392b\",\n      onMouseOut: e => e.currentTarget.style.backgroundColor = \"#e74c3c\",\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"25%\",\n        backgroundColor: \"#2c3e50\",\n        padding: \"20px\",\n        color: \"#ecf0f1\",\n        overflowY: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginBottom: \"20px\"\n        },\n        children: \"Your Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyleType: \"none\",\n          padding: 0\n        },\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              backgroundColor: \"#34495e\",\n              border: \"none\",\n              padding: \"12px 15px\",\n              textAlign: \"left\",\n              width: \"100%\",\n              cursor: \"pointer\",\n              marginBottom: \"10px\",\n              fontSize: \"16px\",\n              borderRadius: \"8px\",\n              color: \"#ecf0f1\",\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.1)\"\n            },\n            onMouseOver: e => e.currentTarget.style.backgroundColor = \"#1abc9c\",\n            onMouseOut: e => e.currentTarget.style.backgroundColor = \"#34495e\",\n            onClick: () => handleTaskClick(task),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                flex: 1,\n                fontSize: \"16px\",\n                fontWeight: \"bold\",\n                textOverflow: \"ellipsis\",\n                overflow: \"hidden\",\n                whiteSpace: \"nowrap\"\n              },\n              children: task.questionText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                backgroundColor: task.status === \"Not Completed\" ? \"#e67e22\" : \"#27ae60\",\n                color: \"#ecf0f1\",\n                padding: \"5px 10px\",\n                borderRadius: \"12px\",\n                fontSize: \"14px\",\n                fontWeight: \"500\",\n                textTransform: \"uppercase\",\n                display: \"inline-block\",\n                textAlign: \"center\"\n              },\n              children: task.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }, this)\n        }, task._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"#bdc3c7\"\n        },\n        children: \"No tasks found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"75%\",\n        padding: \"40px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"#ecf0f1\",\n          padding: \"30px\",\n          borderRadius: \"10px\",\n          boxShadow: \"0px 0px 10px rgba(0, 0, 0, 0.1)\"\n        },\n        children: [!currentTask && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Create a New Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowForm(!showForm),\n            style: {\n              backgroundColor: \"#3498db\",\n              color: \"#ecf0f1\",\n              padding: \"10px 20px\",\n              border: \"none\",\n              borderRadius: \"5px\",\n              cursor: \"pointer\",\n              fontSize: \"16px\",\n              marginBottom: \"20px\"\n            },\n            onMouseOver: e => e.currentTarget.style.backgroundColor = \"#2980b9\",\n            onMouseOut: e => e.currentTarget.style.backgroundColor = \"#3498db\",\n            children: showForm ? \"Close Form\" : \"Add Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this), showForm && /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Question Text:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: questionText,\n                onChange: e => setQuestionText(e.target.value),\n                required: true,\n                style: {\n                  width: \"100%\",\n                  padding: \"10px\",\n                  borderRadius: \"5px\",\n                  border: \"1px solid #bdc3c7\",\n                  fontSize: \"16px\",\n                  minHeight: \"100px\",\n                  boxSizing: \"border-box\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              style: {\n                backgroundColor: \"#3498db\",\n                color: \"#ecf0f1\",\n                padding: \"10px 20px\",\n                border: \"none\",\n                borderRadius: \"5px\",\n                cursor: \"pointer\",\n                marginTop: \"20px\",\n                fontSize: \"16px\"\n              },\n              onMouseOver: e => e.currentTarget.style.backgroundColor = \"#2980b9\",\n              onMouseOut: e => e.currentTarget.style.backgroundColor = \"#3498db\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), currentTask && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"questionTask: \", currentTask.questionText]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this), !taskStarted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setCurrentTask(null),\n              style: {\n                backgroundColor: \"#f39c12\",\n                color: \"#ecf0f1\",\n                padding: \"10px 20px\",\n                border: \"none\",\n                borderRadius: \"5px\",\n                cursor: \"pointer\",\n                marginTop: \"20px\",\n                fontSize: \"16px\",\n                marginRight: \"10px\"\n              },\n              onMouseOver: e => e.currentTarget.style.backgroundColor = \"#e67e22\",\n              onMouseOut: e => e.currentTarget.style.backgroundColor = \"#f39c12\",\n              children: \"Back to Task List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: startTask,\n              style: {\n                backgroundColor: \"#27ae60\",\n                color: \"#ecf0f1\",\n                padding: \"10px 20px\",\n                border: \"none\",\n                borderRadius: \"5px\",\n                cursor: \"pointer\",\n                marginTop: \"20px\",\n                fontSize: \"16px\"\n              },\n              onMouseOver: e => e.currentTarget.style.backgroundColor = \"#1e8449\",\n              onMouseOut: e => e.currentTarget.style.backgroundColor = \"#27ae60\",\n              children: \"Start Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                justifyContent: \"space-between\"\n              },\n              children: [timeLeft !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: \"18px\",\n                  fontWeight: \"bold\"\n                },\n                children: [\"Time Left: \", timeLeft, \"s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: \"18px\",\n                  fontWeight: \"bold\"\n                },\n                children: [\"Mistakes: \", mistakes]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: userAnswer,\n              onChange: e => setUserAnswer(e.target.value),\n              style: {\n                width: \"100%\",\n                padding: \"10px\",\n                borderRadius: \"5px\",\n                border: \"1px solid #bdc3c7\",\n                fontSize: \"16px\",\n                minHeight: \"100px\",\n                boxSizing: \"border-box\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                // Center horizontally\n                marginTop: \"20px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleTaskUpdate,\n                style: {\n                  backgroundColor: \"#3498db\",\n                  color: \"#ecf0f1\",\n                  padding: \"10px 20px\",\n                  border: \"none\",\n                  borderRadius: \"5px\",\n                  cursor: \"pointer\",\n                  fontSize: \"16px\",\n                  marginRight: \"10px\"\n                },\n                onMouseOver: e => e.currentTarget.style.backgroundColor = \"#2980b9\",\n                onMouseOut: e => e.currentTarget.style.backgroundColor = \"#3498db\",\n                children: \"Submit Answer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: \"18px\",\n                  fontWeight: \"bold\",\n                  color: status === \"Passed\" ? \"#27ae60\" : \"#e67e22\" // Green if pass, red otherwise\n                },\n                children: [\"Status: \", status]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n};\n_s(Addtask, \"pvO33UKhBmAQrRr79MiWDtN1RKU=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = Addtask;\nexport default Addtask;\nvar _c;\n$RefreshReg$(_c, \"Addtask\");","map":{"version":3,"names":["React","useState","useEffect","toast","useAuth","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Addtask","_s","questionText","setQuestionText","userID","setUserID","tasks","setTasks","showForm","setShowForm","currentTask","setCurrentTask","userAnswer","setUserAnswer","timeLeft","setTimeLeft","mistakes","setMistakes","status","setStatus","taskStarted","setTaskStarted","navigate","UserIDFROMLSGet","logout","storedUserID","console","error","fetchTasks","response","fetch","ok","fetchedTasks","json","log","result","message","handleSubmit","e","preventDefault","taskData","method","headers","body","JSON","stringify","success","handleTaskClick","task","startTask","handleTaskUpdate","timer","setInterval","prev","clearInterval","countMistakes","correctWords","split","answerWords","trim","i","length","mistakesCount","statuss","_id","answer","setTimeout","handleLogout","style","display","minHeight","backgroundColor","children","onClick","position","top","right","color","padding","border","borderRadius","cursor","fontSize","onMouseOver","currentTarget","onMouseOut","fileName","_jsxFileName","lineNumber","columnNumber","width","overflowY","marginBottom","listStyleType","map","textAlign","justifyContent","alignItems","boxShadow","flex","fontWeight","textOverflow","overflow","whiteSpace","textTransform","onSubmit","value","onChange","target","required","boxSizing","type","marginTop","marginRight","_c","$RefreshReg$"],"sources":["C:/Users/POOJA/Newtask1/client/src/Components/Addtask/Addtask.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useAuth } from \"../Store/authh\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Addtask = () => {\r\n  const [questionText, setQuestionText] = useState(\"\");\r\n  const [userID, setUserID] = useState(\"\");\r\n  const [tasks, setTasks] = useState([]);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [currentTask, setCurrentTask] = useState(null);\r\n  const [userAnswer, setUserAnswer] = useState(\"\");\r\n  const [timeLeft, setTimeLeft] = useState(null);\r\n  const [mistakes, setMistakes] = useState(0);\r\n  const [status, setStatus] = useState(0);\r\n  const [taskStarted, setTaskStarted] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const { UserIDFROMLSGet, logout } = useAuth();\r\n\r\n  useEffect(() => {\r\n    const storedUserID = UserIDFROMLSGet();\r\n    if (storedUserID) {\r\n      setUserID(storedUserID);\r\n    } else {\r\n      console.error(\"No userID found in local storage.\");\r\n      toast.error(\"Failed to retrieve user ID. Please log in again.\");\r\n      navigate(\"/login\");\r\n    }\r\n  }, [UserIDFROMLSGet, navigate]);\r\n\r\n  useEffect(() => {\r\n    if (userID) {\r\n      fetchTasks();\r\n    }\r\n  }, [userID]);\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const response = await fetch(`/api/authh/alltaskget/${userID}`);\r\n\r\n      if (response.ok) {\r\n        const fetchedTasks = await response.json();\r\n        console.log(\"p1\", fetchedTasks);\r\n        setTasks(fetchedTasks.tasks);\r\n      } else {\r\n        const result = await response.json();\r\n        toast.error(result.message || \"Failed to fetch tasks\");\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"An error occurred while fetching tasks.\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const taskData = { questionText, userID };\r\n\r\n    try {\r\n      const response = await fetch(\"/api/authh/createtask\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(taskData),\r\n      });\r\n      const result = await response.json();\r\n\r\n      if (response.ok) {\r\n        toast.success(\"Task created successfully!\");\r\n        setQuestionText(\"\");\r\n        setShowForm(false);\r\n        fetchTasks();\r\n      } else {\r\n        toast.error(result.message || \"Failed to create task\");\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"An error occurred while creating the task.\");\r\n    }\r\n  };\r\n\r\n  const handleTaskClick = (task) => {\r\n    if (task.status !== \"Not Completed\") {\r\n      toast.error(\"Task is already completed.\");\r\n      return;\r\n    }\r\n    setCurrentTask(task);\r\n    setUserAnswer(\"\"); // Reset the answer field\r\n    setMistakes(0); // Reset mistakes\r\n    setTaskStarted(false); // Reset task started state\r\n    setTimeLeft(null); // Reset the timer\r\n    setShowForm(false);\r\n  };\r\n\r\n  const startTask = () => {\r\n    if (currentTask) {\r\n      setTimeLeft(30); // Start 30-second countdown\r\n      setTaskStarted(true); // Indicate that the task has started\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (timeLeft === null) return;\r\n\r\n    if (timeLeft <= 0) {\r\n      handleTaskUpdate();\r\n      return;\r\n    }\r\n\r\n    const timer = setInterval(() => {\r\n      setTimeLeft((prev) => prev - 1);\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [timeLeft]);\r\n\r\n  useEffect(() => {\r\n    countMistakes();\r\n  }, [userAnswer]);\r\n\r\n  const countMistakes = () => {\r\n    if (!currentTask) return 0;\r\n\r\n    const correctWords = currentTask.questionText.split(\" \");\r\n    const answerWords = userAnswer.trim().split(\" \");\r\n    let mistakes = 0;\r\n\r\n    for (let i = 0; i < correctWords.length; i++) {\r\n      if (answerWords[i] !== correctWords[i]) {\r\n        mistakes++;\r\n      }\r\n    }\r\n\r\n    setMistakes(mistakes);\r\n    return mistakes;\r\n  };\r\n\r\n  const handleTaskUpdate = async () => {\r\n    try {\r\n      const mistakesCount = countMistakes();\r\n      const statuss = mistakesCount === 0 ? \"Passed\" : \"Failed\";\r\n\r\n      const response = await fetch(`/api/authh/updatetask/${currentTask._id}`, {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          answer: userAnswer,\r\n          mistakes: mistakesCount,\r\n          status: statuss,\r\n        }),\r\n      });\r\n      const result = await response.json();\r\n\r\n      if (response.ok) {\r\n        setStatus(statuss); // Show the status immediately\r\n        setTimeout(() => {\r\n          setStatus(null); // Reset status after a short delay\r\n          setCurrentTask(null);\r\n          setUserAnswer(\"\");\r\n          setTimeLeft(null);\r\n          fetchTasks();\r\n        }, 2000);\r\n      } else {\r\n        setStatus(\"Error\");\r\n      }\r\n    } catch (error) {\r\n      setStatus(\"Error\");\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    logout(); // Clear the user session and data\r\n    toast.success(\"Logged out successfully!\");\r\n    navigate(\"/\"); // Redirect to the registration page\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        minHeight: \"100vh\",\r\n        backgroundColor: \"#f5f5f5\",\r\n      }}\r\n    >\r\n      <button\r\n        onClick={handleLogout}\r\n        style={{\r\n          position: \"absolute\",\r\n          top: \"10px\",\r\n          right: \"20px\",\r\n          backgroundColor: \"#e74c3c\",\r\n          color: \"#ecf0f1\",\r\n          padding: \"10px 20px\",\r\n          border: \"none\",\r\n          borderRadius: \"5px\",\r\n          cursor: \"pointer\",\r\n          fontSize: \"16px\",\r\n        }}\r\n        onMouseOver={(e) => (e.currentTarget.style.backgroundColor = \"#c0392b\")}\r\n        onMouseOut={(e) => (e.currentTarget.style.backgroundColor = \"#e74c3c\")}\r\n      >\r\n        Logout\r\n      </button>\r\n      <div\r\n        style={{\r\n          width: \"25%\",\r\n          backgroundColor: \"#2c3e50\",\r\n          padding: \"20px\",\r\n          color: \"#ecf0f1\",\r\n          overflowY: \"auto\",\r\n        }}\r\n      >\r\n        <h2 style={{ marginBottom: \"20px\" }}>Your Tasks</h2>\r\n        {tasks.length > 0 ? (\r\n          <ul style={{ listStyleType: \"none\", padding: 0 }}>\r\n            {tasks.map((task) => (\r\n              <li key={task._id}>\r\n                <button\r\n                  style={{\r\n                    backgroundColor: \"#34495e\",\r\n                    border: \"none\",\r\n                    padding: \"12px 15px\",\r\n                    textAlign: \"left\",\r\n                    width: \"100%\",\r\n                    cursor: \"pointer\",\r\n                    marginBottom: \"10px\",\r\n                    fontSize: \"16px\",\r\n                    borderRadius: \"8px\",\r\n                    color: \"#ecf0f1\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                    boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.1)\",\r\n                  }}\r\n                  onMouseOver={(e) =>\r\n                    (e.currentTarget.style.backgroundColor = \"#1abc9c\")\r\n                  }\r\n                  onMouseOut={(e) =>\r\n                    (e.currentTarget.style.backgroundColor = \"#34495e\")\r\n                  }\r\n                  onClick={() => handleTaskClick(task)}\r\n                >\r\n                  <span\r\n                    style={{\r\n                      flex: 1,\r\n                      fontSize: \"16px\",\r\n                      fontWeight: \"bold\",\r\n                      textOverflow: \"ellipsis\",\r\n                      overflow: \"hidden\",\r\n                      whiteSpace: \"nowrap\",\r\n                    }}\r\n                  >\r\n                    {task.questionText}\r\n                  </span>\r\n                  <span\r\n                    style={{\r\n                      backgroundColor:\r\n                        task.status === \"Not Completed\" ? \"#e67e22\" : \"#27ae60\",\r\n                      color: \"#ecf0f1\",\r\n                      padding: \"5px 10px\",\r\n                      borderRadius: \"12px\",\r\n                      fontSize: \"14px\",\r\n                      fontWeight: \"500\",\r\n                      textTransform: \"uppercase\",\r\n                      display: \"inline-block\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    {task.status}\r\n                  </span>\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p style={{ color: \"#bdc3c7\" }}>No tasks found.</p>\r\n        )}\r\n      </div>\r\n\r\n      <div style={{ width: \"75%\", padding: \"40px\" }}>\r\n        <div\r\n          style={{\r\n            backgroundColor: \"#ecf0f1\",\r\n            padding: \"30px\",\r\n            borderRadius: \"10px\",\r\n            boxShadow: \"0px 0px 10px rgba(0, 0, 0, 0.1)\",\r\n          }}\r\n        >\r\n          {!currentTask && (\r\n            <>\r\n              <h2>Create a New Task</h2>\r\n              <button\r\n                onClick={() => setShowForm(!showForm)}\r\n                style={{\r\n                  backgroundColor: \"#3498db\",\r\n                  color: \"#ecf0f1\",\r\n                  padding: \"10px 20px\",\r\n                  border: \"none\",\r\n                  borderRadius: \"5px\",\r\n                  cursor: \"pointer\",\r\n                  fontSize: \"16px\",\r\n                  marginBottom: \"20px\",\r\n                }}\r\n                onMouseOver={(e) =>\r\n                  (e.currentTarget.style.backgroundColor = \"#2980b9\")\r\n                }\r\n                onMouseOut={(e) =>\r\n                  (e.currentTarget.style.backgroundColor = \"#3498db\")\r\n                }\r\n              >\r\n                {showForm ? \"Close Form\" : \"Add Task\"}\r\n              </button>\r\n\r\n              {showForm && (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div>\r\n                    <label>Question Text:</label>\r\n                    <textarea\r\n                      value={questionText}\r\n                      onChange={(e) => setQuestionText(e.target.value)}\r\n                      required\r\n                      style={{\r\n                        width: \"100%\",\r\n                        padding: \"10px\",\r\n                        borderRadius: \"5px\",\r\n                        border: \"1px solid #bdc3c7\",\r\n                        fontSize: \"16px\",\r\n                        minHeight: \"100px\",\r\n                        boxSizing: \"border-box\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    style={{\r\n                      backgroundColor: \"#3498db\",\r\n                      color: \"#ecf0f1\",\r\n                      padding: \"10px 20px\",\r\n                      border: \"none\",\r\n                      borderRadius: \"5px\",\r\n                      cursor: \"pointer\",\r\n                      marginTop: \"20px\",\r\n                      fontSize: \"16px\",\r\n                    }}\r\n                    onMouseOver={(e) =>\r\n                      (e.currentTarget.style.backgroundColor = \"#2980b9\")\r\n                    }\r\n                    onMouseOut={(e) =>\r\n                      (e.currentTarget.style.backgroundColor = \"#3498db\")\r\n                    }\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </form>\r\n              )}\r\n            </>\r\n          )}\r\n\r\n          {currentTask && (\r\n            <div style={{ marginTop: \"20px\" }}>\r\n              <h3>questionTask: {currentTask.questionText}</h3>\r\n              {!taskStarted ? (\r\n                <>\r\n                  <button\r\n                    onClick={() => setCurrentTask(null)}\r\n                    style={{\r\n                      backgroundColor: \"#f39c12\",\r\n                      color: \"#ecf0f1\",\r\n                      padding: \"10px 20px\",\r\n                      border: \"none\",\r\n                      borderRadius: \"5px\",\r\n                      cursor: \"pointer\",\r\n                      marginTop: \"20px\",\r\n                      fontSize: \"16px\",\r\n                      marginRight: \"10px\",\r\n                    }}\r\n                    onMouseOver={(e) =>\r\n                      (e.currentTarget.style.backgroundColor = \"#e67e22\")\r\n                    }\r\n                    onMouseOut={(e) =>\r\n                      (e.currentTarget.style.backgroundColor = \"#f39c12\")\r\n                    }\r\n                  >\r\n                    Back to Task List\r\n                  </button>\r\n                  <button\r\n                    onClick={startTask}\r\n                    style={{\r\n                      backgroundColor: \"#27ae60\",\r\n                      color: \"#ecf0f1\",\r\n                      padding: \"10px 20px\",\r\n                      border: \"none\",\r\n                      borderRadius: \"5px\",\r\n                      cursor: \"pointer\",\r\n                      marginTop: \"20px\",\r\n                      fontSize: \"16px\",\r\n                    }}\r\n                    onMouseOver={(e) =>\r\n                      (e.currentTarget.style.backgroundColor = \"#1e8449\")\r\n                    }\r\n                    onMouseOut={(e) =>\r\n                      (e.currentTarget.style.backgroundColor = \"#27ae60\")\r\n                    }\r\n                  >\r\n                    Start Task\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <div>\r\n                  <div\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                  >\r\n                    {timeLeft !== null && (\r\n                      <div style={{ fontSize: \"18px\", fontWeight: \"bold\" }}>\r\n                        Time Left: {timeLeft}s\r\n                      </div>\r\n                    )}\r\n                    <div style={{ fontSize: \"18px\", fontWeight: \"bold\" }}>\r\n                      Mistakes: {mistakes}\r\n                    </div>\r\n                  </div>\r\n                  <textarea\r\n                    value={userAnswer}\r\n                    onChange={(e) => setUserAnswer(e.target.value)}\r\n                    style={{\r\n                      width: \"100%\",\r\n                      padding: \"10px\",\r\n                      borderRadius: \"5px\",\r\n                      border: \"1px solid #bdc3c7\",\r\n                      fontSize: \"16px\",\r\n                      minHeight: \"100px\",\r\n                      boxSizing: \"border-box\",\r\n                    }}\r\n                  />\r\n\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\", // Center horizontally\r\n                      marginTop: \"20px\",\r\n                    }}\r\n                  >\r\n                    <button\r\n                      onClick={handleTaskUpdate}\r\n                      style={{\r\n                        backgroundColor: \"#3498db\",\r\n                        color: \"#ecf0f1\",\r\n                        padding: \"10px 20px\",\r\n                        border: \"none\",\r\n                        borderRadius: \"5px\",\r\n                        cursor: \"pointer\",\r\n                        fontSize: \"16px\",\r\n                        marginRight: \"10px\",\r\n                      }}\r\n                      onMouseOver={(e) =>\r\n                        (e.currentTarget.style.backgroundColor = \"#2980b9\")\r\n                      }\r\n                      onMouseOut={(e) =>\r\n                        (e.currentTarget.style.backgroundColor = \"#3498db\")\r\n                      }\r\n                    >\r\n                      Submit Answer\r\n                    </button>\r\n                    <div\r\n                      style={{\r\n                        fontSize: \"18px\",\r\n                        fontWeight: \"bold\",\r\n                        color: status === \"Passed\" ? \"#27ae60\" : \"#e67e22\", // Green if pass, red otherwise\r\n                      }}\r\n                    >\r\n                      Status: {status}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Addtask;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}