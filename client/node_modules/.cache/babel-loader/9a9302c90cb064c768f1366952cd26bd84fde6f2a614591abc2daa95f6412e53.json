{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\POOJA\\\\newtask\\\\client\\\\src\\\\Components\\\\Addtask\\\\Addtask.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useAuth } from \"../Store/authh\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CreateTask = () => {\n  _s();\n  const [questionText, setQuestionText] = useState(\"\");\n  const [correctAnswer, setCorrectAnswer] = useState(\"\");\n  const [userID, setUserID] = useState(\"\");\n  const [tasks, setTasks] = useState([]);\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [userAnswer, setUserAnswer] = useState(\"\");\n  const [mistakes, setMistakes] = useState(0);\n  const [timer, setTimer] = useState(30);\n  const navigate = useNavigate();\n  const {\n    UserIDFROMLSGet\n  } = useAuth();\n\n  // Fetch userID from local storage\n  useEffect(() => {\n    const storedUserID = UserIDFROMLSGet();\n    if (storedUserID) {\n      setUserID(storedUserID);\n    } else {\n      console.error(\"No userID found in local storage.\");\n      toast.error(\"Failed to retrieve user ID. Please log in again.\");\n      navigate(\"/login\");\n    }\n  }, [UserIDFROMLSGet, navigate]);\n\n  // Fetch tasks when userID is available\n  useEffect(() => {\n    if (userID) {\n      fetchTasks();\n    }\n  }, [userID]);\n\n  // Timer logic\n  useEffect(() => {\n    let countdown;\n    if (selectedTask && timer > 0) {\n      countdown = setInterval(() => {\n        setTimer(prevTimer => prevTimer - 1);\n      }, 1000);\n    } else if (timer === 0 && selectedTask) {\n      handleSubmit();\n    }\n    return () => clearInterval(countdown);\n  }, [selectedTask, timer]);\n\n  // Fetch tasks from server\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch(`/api/authh/alltaskget/${userID}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.ok) {\n        const fetchedTasks = await response.json();\n        setTasks(fetchedTasks);\n      } else {\n        const result = await response.json();\n        console.log(result.message);\n        toast.error(result.message || \"Failed to fetch tasks\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error);\n      toast.error(\"An error occurred while fetching tasks.\");\n    }\n  };\n\n  // Create new task\n  const handleCreateTask = async e => {\n    e.preventDefault();\n    if (!questionText || !correctAnswer) {\n      toast.error(\"Please provide both question text and correct answer.\");\n      return;\n    }\n    const taskData = {\n      questionText,\n      correctAnswer,\n      userID\n    };\n    try {\n      const response = await fetch(\"/api/authh/createtask\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(taskData)\n      });\n      if (response.ok) {\n        toast.success(\"Task created successfully!\");\n        setQuestionText(\"\");\n        setCorrectAnswer(\"\");\n        setShowCreateForm(false);\n        fetchTasks();\n      } else {\n        const result = await response.json();\n        console.log(result.message);\n        toast.error(result.message || \"Failed to create task\");\n      }\n    } catch (error) {\n      console.error(\"Error creating task:\", error);\n      toast.error(\"An error occurred while creating the task.\");\n    }\n  };\n\n  // Start selected task\n  const startTask = task => {\n    setSelectedTask(task);\n    setUserAnswer(\"\");\n    setMistakes(0);\n    setTimer(30);\n  };\n\n  // Handle user answer input\n  const handleAnswerChange = e => {\n    const input = e.target.value;\n    setUserAnswer(input);\n    const correctChar = selectedTask.correctAnswer[input.length - 1];\n    const inputChar = input[input.length - 1];\n    if (inputChar !== correctChar) {\n      setMistakes(prevMistakes => prevMistakes + 1);\n      toast.error(\"Incorrect character entered.\");\n    }\n\n    // Auto-submit if answer is complete\n    if (input === selectedTask.correctAnswer) {\n      handleSubmit();\n    }\n  };\n\n  // Submit task result\n  const handleSubmit = async () => {\n    const status = userAnswer === selectedTask.correctAnswer && mistakes === 0 ? \"Success\" : \"Failed\";\n    try {\n      const response = await fetch(`/api/authh/updatetask/${selectedTask._id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userAnswer,\n          mistakes,\n          status\n        })\n      });\n      if (response.ok) {\n        toast.success(`Task ${status.toLowerCase()}!`);\n        setSelectedTask(null);\n        fetchTasks();\n      } else {\n        const result = await response.json();\n        console.log(result.message);\n        toast.error(result.message || \"Failed to update task\");\n      }\n    } catch (error) {\n      console.error(\"Error updating task:\", error);\n      toast.error(\"An error occurred while updating the task.\");\n    }\n  };\n\n  // Cancel current task\n  const handleCancelTask = () => {\n    setSelectedTask(null);\n    setUserAnswer(\"\");\n    setMistakes(0);\n    setTimer(30);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      minHeight: \"100vh\",\n      backgroundColor: \"#f5f5f5\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"25%\",\n        backgroundColor: \"#2c3e50\",\n        padding: \"20px\",\n        color: \"#ecf0f1\",\n        overflowY: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowCreateForm(!showCreateForm),\n        style: {\n          backgroundColor: \"#3498db\",\n          color: \"#ecf0f1\",\n          padding: \"10px 20px\",\n          border: \"none\",\n          borderRadius: \"5px\",\n          cursor: \"pointer\",\n          fontSize: \"16px\",\n          marginBottom: \"20px\",\n          width: \"100%\"\n        },\n        children: showCreateForm ? \"Close Form\" : \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), showCreateForm && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleCreateTask,\n        style: {\n          marginBottom: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Question Text:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: questionText,\n            onChange: e => setQuestionText(e.target.value),\n            required: true,\n            style: {\n              width: \"100%\",\n              padding: \"10px\",\n              borderRadius: \"5px\",\n              border: \"1px solid #bdc3c7\",\n              fontSize: \"16px\",\n              minHeight: \"80px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Correct Answer:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: correctAnswer,\n            onChange: e => setCorrectAnswer(e.target.value),\n            required: true,\n            style: {\n              width: \"100%\",\n              padding: \"10px\",\n              borderRadius: \"5px\",\n              border: \"1px solid #bdc3c7\",\n              fontSize: \"16px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            backgroundColor: \"#2ecc71\",\n            color: \"#ecf0f1\",\n            padding: \"10px 20px\",\n            border: \"none\",\n            borderRadius: \"5px\",\n            cursor: \"pointer\",\n            fontSize: \"16px\",\n            width: \"100%\"\n          },\n          children: \"Create Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyleType: \"none\",\n          padding: 0\n        },\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: \"10px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: \"#34495e\",\n              padding: \"15px\",\n              borderRadius: \"5px\",\n              cursor: \"pointer\"\n            },\n            onClick: () => startTask(task),\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                margin: 0,\n                fontSize: \"18px\"\n              },\n              children: task.questionText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"Status: \", task.status]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 17\n          }, this)\n        }, task._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tasks found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"75%\",\n        padding: \"40px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"#ecf0f1\",\n          padding: \"30px\",\n          borderRadius: \"10px\",\n          boxShadow: \"0px 0px 10px rgba(0, 0, 0, 0.1)\",\n          minHeight: \"400px\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: selectedTask ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedTask.questionText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Time Remaining: \", timer, \" seconds\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Mistakes: \", mistakes]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: userAnswer,\n            onChange: handleAnswerChange,\n            autoFocus: true,\n            style: {\n              width: \"100%\",\n              padding: \"10px\",\n              borderRadius: \"5px\",\n              border: \"1px solid #bdc3c7\",\n              fontSize: \"16px\",\n              marginBottom: \"20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSubmit,\n              style: {\n                backgroundColor: \"#3498db\",\n                color: \"#ecf0f1\",\n                padding: \"10px 20px\",\n                border: \"none\",\n                borderRadius: \"5px\",\n                cursor: \"pointer\",\n                fontSize: \"16px\",\n                marginRight: \"10px\"\n              },\n              children: \"Submit Answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCancelTask,\n              style: {\n                backgroundColor: \"#e74c3c\",\n                color: \"#ecf0f1\",\n                padding: \"10px 20px\",\n                border: \"none\",\n                borderRadius: \"5px\",\n                cursor: \"pointer\",\n                fontSize: \"16px\"\n              },\n              children: \"Cancel Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select a task from the left to begin.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateTask, \"cNNtF3TQF34KaGUV68KGNKl8o4Q=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = CreateTask;\nexport default CreateTask;\nvar _c;\n$RefreshReg$(_c, \"CreateTask\");","map":{"version":3,"names":["React","useState","useEffect","toast","useAuth","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateTask","_s","questionText","setQuestionText","correctAnswer","setCorrectAnswer","userID","setUserID","tasks","setTasks","showCreateForm","setShowCreateForm","selectedTask","setSelectedTask","userAnswer","setUserAnswer","mistakes","setMistakes","timer","setTimer","navigate","UserIDFROMLSGet","storedUserID","console","error","fetchTasks","countdown","setInterval","prevTimer","handleSubmit","clearInterval","response","fetch","method","headers","ok","fetchedTasks","json","result","log","message","handleCreateTask","e","preventDefault","taskData","body","JSON","stringify","success","startTask","task","handleAnswerChange","input","target","value","correctChar","length","inputChar","prevMistakes","status","_id","toLowerCase","handleCancelTask","style","display","minHeight","backgroundColor","children","width","padding","color","overflowY","fileName","_jsxFileName","lineNumber","columnNumber","onClick","border","borderRadius","cursor","fontSize","marginBottom","onSubmit","onChange","required","type","listStyleType","map","background","margin","boxShadow","flexDirection","justifyContent","alignItems","autoFocus","marginRight","_c","$RefreshReg$"],"sources":["C:/Users/POOJA/newtask/client/src/Components/Addtask/Addtask.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useAuth } from \"../Store/authh\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst CreateTask = () => {\r\n  const [questionText, setQuestionText] = useState(\"\");\r\n  const [correctAnswer, setCorrectAnswer] = useState(\"\");\r\n  const [userID, setUserID] = useState(\"\");\r\n  const [tasks, setTasks] = useState([]);\r\n  const [showCreateForm, setShowCreateForm] = useState(false);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [userAnswer, setUserAnswer] = useState(\"\");\r\n  const [mistakes, setMistakes] = useState(0);\r\n  const [timer, setTimer] = useState(30);\r\n  const navigate = useNavigate();\r\n\r\n  const { UserIDFROMLSGet } = useAuth();\r\n\r\n  // Fetch userID from local storage\r\n  useEffect(() => {\r\n    const storedUserID = UserIDFROMLSGet();\r\n    if (storedUserID) {\r\n      setUserID(storedUserID);\r\n    } else {\r\n      console.error(\"No userID found in local storage.\");\r\n      toast.error(\"Failed to retrieve user ID. Please log in again.\");\r\n      navigate(\"/login\");\r\n    }\r\n  }, [UserIDFROMLSGet, navigate]);\r\n\r\n  // Fetch tasks when userID is available\r\n  useEffect(() => {\r\n    if (userID) {\r\n      fetchTasks();\r\n    }\r\n  }, [userID]);\r\n\r\n  // Timer logic\r\n  useEffect(() => {\r\n    let countdown;\r\n    if (selectedTask && timer > 0) {\r\n      countdown = setInterval(() => {\r\n        setTimer((prevTimer) => prevTimer - 1);\r\n      }, 1000);\r\n    } else if (timer === 0 && selectedTask) {\r\n      handleSubmit();\r\n    }\r\n    return () => clearInterval(countdown);\r\n  }, [selectedTask, timer]);\r\n\r\n  // Fetch tasks from server\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const response = await fetch(`/api/authh/alltaskget/${userID}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const fetchedTasks = await response.json();\r\n        setTasks(fetchedTasks);\r\n      } else {\r\n        const result = await response.json();\r\n        console.log(result.message);\r\n        toast.error(result.message || \"Failed to fetch tasks\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching tasks:\", error);\r\n      toast.error(\"An error occurred while fetching tasks.\");\r\n    }\r\n  };\r\n\r\n  // Create new task\r\n  const handleCreateTask = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!questionText || !correctAnswer) {\r\n      toast.error(\"Please provide both question text and correct answer.\");\r\n      return;\r\n    }\r\n\r\n    const taskData = {\r\n      questionText,\r\n      correctAnswer,\r\n      userID,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\"/api/authh/createtask\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(taskData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        toast.success(\"Task created successfully!\");\r\n        setQuestionText(\"\");\r\n        setCorrectAnswer(\"\");\r\n        setShowCreateForm(false);\r\n        fetchTasks();\r\n      } else {\r\n        const result = await response.json();\r\n        console.log(result.message);\r\n        toast.error(result.message || \"Failed to create task\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error creating task:\", error);\r\n      toast.error(\"An error occurred while creating the task.\");\r\n    }\r\n  };\r\n\r\n  // Start selected task\r\n  const startTask = (task) => {\r\n    setSelectedTask(task);\r\n    setUserAnswer(\"\");\r\n    setMistakes(0);\r\n    setTimer(30);\r\n  };\r\n\r\n  // Handle user answer input\r\n  const handleAnswerChange = (e) => {\r\n    const input = e.target.value;\r\n    setUserAnswer(input);\r\n\r\n    const correctChar = selectedTask.correctAnswer[input.length - 1];\r\n    const inputChar = input[input.length - 1];\r\n\r\n    if (inputChar !== correctChar) {\r\n      setMistakes((prevMistakes) => prevMistakes + 1);\r\n      toast.error(\"Incorrect character entered.\");\r\n    }\r\n\r\n    // Auto-submit if answer is complete\r\n    if (input === selectedTask.correctAnswer) {\r\n      handleSubmit();\r\n    }\r\n  };\r\n\r\n  // Submit task result\r\n  const handleSubmit = async () => {\r\n    const status = userAnswer === selectedTask.correctAnswer && mistakes === 0 ? \"Success\" : \"Failed\";\r\n\r\n    try {\r\n      const response = await fetch(`/api/authh/updatetask/${selectedTask._id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          userAnswer,\r\n          mistakes,\r\n          status,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        toast.success(`Task ${status.toLowerCase()}!`);\r\n        setSelectedTask(null);\r\n        fetchTasks();\r\n      } else {\r\n        const result = await response.json();\r\n        console.log(result.message);\r\n        toast.error(result.message || \"Failed to update task\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating task:\", error);\r\n      toast.error(\"An error occurred while updating the task.\");\r\n    }\r\n  };\r\n\r\n  // Cancel current task\r\n  const handleCancelTask = () => {\r\n    setSelectedTask(null);\r\n    setUserAnswer(\"\");\r\n    setMistakes(0);\r\n    setTimer(30);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", minHeight: \"100vh\", backgroundColor: \"#f5f5f5\" }}>\r\n      {/* Sidebar */}\r\n      <div\r\n        style={{\r\n          width: \"25%\",\r\n          backgroundColor: \"#2c3e50\",\r\n          padding: \"20px\",\r\n          color: \"#ecf0f1\",\r\n          overflowY: \"auto\",\r\n        }}\r\n      >\r\n        <h2>Your Tasks</h2>\r\n        <button\r\n          onClick={() => setShowCreateForm(!showCreateForm)}\r\n          style={{\r\n            backgroundColor: \"#3498db\",\r\n            color: \"#ecf0f1\",\r\n            padding: \"10px 20px\",\r\n            border: \"none\",\r\n            borderRadius: \"5px\",\r\n            cursor: \"pointer\",\r\n            fontSize: \"16px\",\r\n            marginBottom: \"20px\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          {showCreateForm ? \"Close Form\" : \"Add Task\"}\r\n        </button>\r\n\r\n        {showCreateForm && (\r\n          <form onSubmit={handleCreateTask} style={{ marginBottom: \"20px\" }}>\r\n            <div style={{ marginBottom: \"10px\" }}>\r\n              <label>Question Text:</label>\r\n              <textarea\r\n                value={questionText}\r\n                onChange={(e) => setQuestionText(e.target.value)}\r\n                required\r\n                style={{\r\n                  width: \"100%\",\r\n                  padding: \"10px\",\r\n                  borderRadius: \"5px\",\r\n                  border: \"1px solid #bdc3c7\",\r\n                  fontSize: \"16px\",\r\n                  minHeight: \"80px\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div style={{ marginBottom: \"10px\" }}>\r\n              <label>Correct Answer:</label>\r\n              <input\r\n                type=\"text\"\r\n                value={correctAnswer}\r\n                onChange={(e) => setCorrectAnswer(e.target.value)}\r\n                required\r\n                style={{\r\n                  width: \"100%\",\r\n                  padding: \"10px\",\r\n                  borderRadius: \"5px\",\r\n                  border: \"1px solid #bdc3c7\",\r\n                  fontSize: \"16px\",\r\n                }}\r\n              />\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              style={{\r\n                backgroundColor: \"#2ecc71\",\r\n                color: \"#ecf0f1\",\r\n                padding: \"10px 20px\",\r\n                border: \"none\",\r\n                borderRadius: \"5px\",\r\n                cursor: \"pointer\",\r\n                fontSize: \"16px\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              Create Task\r\n            </button>\r\n          </form>\r\n        )}\r\n\r\n        {tasks.length > 0 ? (\r\n          <ul style={{ listStyleType: \"none\", padding: 0 }}>\r\n            {tasks.map((task) => (\r\n              <li key={task._id} style={{ marginBottom: \"10px\" }}>\r\n                <div\r\n                  style={{\r\n                    background: \"#34495e\",\r\n                    padding: \"15px\",\r\n                    borderRadius: \"5px\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                  onClick={() => startTask(task)}\r\n                >\r\n                  <p style={{ margin: 0, fontSize: \"18px\" }}>{task.questionText}</p>\r\n                  <small>Status: {task.status}</small>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>No tasks found.</p>\r\n        )}\r\n      </div>\r\n\r\n      {/* Main Content */}\r\n      <div style={{ width: \"75%\", padding: \"40px\" }}>\r\n        <div\r\n          style={{\r\n            backgroundColor: \"#ecf0f1\",\r\n            padding: \"30px\",\r\n            borderRadius: \"10px\",\r\n            boxShadow: \"0px 0px 10px rgba(0, 0, 0, 0.1)\",\r\n            minHeight: \"400px\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {selectedTask ? (\r\n            <>\r\n              <h2>{selectedTask.questionText}</h2>\r\n              <p>Time Remaining: {timer} seconds</p>\r\n              <p>Mistakes: {mistakes}</p>\r\n              <input\r\n                type=\"text\"\r\n                value={userAnswer}\r\n                onChange={handleAnswerChange}\r\n                autoFocus\r\n                style={{\r\n                  width: \"100%\",\r\n                  padding: \"10px\",\r\n                  borderRadius: \"5px\",\r\n                  border: \"1px solid #bdc3c7\",\r\n                  fontSize: \"16px\",\r\n                  marginBottom: \"20px\",\r\n                }}\r\n              />\r\n              <div>\r\n                <button\r\n                  onClick={handleSubmit}\r\n                  style={{\r\n                    backgroundColor: \"#3498db\",\r\n                    color: \"#ecf0f1\",\r\n                    padding: \"10px 20px\",\r\n                    border: \"none\",\r\n                    borderRadius: \"5px\",\r\n                    cursor: \"pointer\",\r\n                    fontSize: \"16px\",\r\n                    marginRight: \"10px\",\r\n                  }}\r\n                >\r\n                  Submit Answer\r\n                </button>\r\n                <button\r\n                  onClick={handleCancelTask}\r\n                  style={{\r\n                    backgroundColor: \"#e74c3c\",\r\n                    color: \"#ecf0f1\",\r\n                    padding: \"10px 20px\",\r\n                    border: \"none\",\r\n                    borderRadius: \"5px\",\r\n                    cursor: \"pointer\",\r\n                    fontSize: \"16px\",\r\n                  }}\r\n                >\r\n                  Cancel Task\r\n                </button>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <h2>Select a task from the left to begin.</h2>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateTask;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}