{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\POOJA\\\\newtask\\\\client\\\\src\\\\Components\\\\Addtask\\\\Addtask.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useAuth } from \"../Store/authh\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateTask = () => {\n  _s();\n  const [questionText, setQuestionText] = useState(\"\");\n  const [userID, setUserID] = useState(\"\");\n  const [tasks, setTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [userAnswer, setUserAnswer] = useState(\"\");\n  const [mistakes, setMistakes] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(30); // Timer starts at 30 seconds\n  const [showForm, setShowForm] = useState(false);\n  const navigate = useNavigate();\n  const {\n    UserIDFROMLSGet\n  } = useAuth();\n  useEffect(() => {\n    const storedUserID = UserIDFROMLSGet();\n    if (storedUserID) {\n      setUserID(storedUserID);\n    } else {\n      toast.error(\"Failed to retrieve user ID. Please log in again.\");\n      navigate(\"/login\");\n    }\n  }, [UserIDFROMLSGet, navigate]);\n  const handleSubmit = async () => {\n    const taskData = {\n      userID,\n      taskID: selectedTask._id,\n      mistakes,\n      passed: mistakes === 0 && timeLeft > 0\n    };\n    try {\n      const response = await fetch(\"/api/authh/updateTaskStatus\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(taskData)\n      });\n      if (response.ok) {\n        toast.success(\"Task completed successfully!\");\n      } else {\n        const result = await response.json();\n        toast.error(result.message || \"Failed to update task status.\");\n      }\n    } catch (error) {\n      console.error(\"Error updating task status:\", error);\n      toast.error(\"An error occurred while updating the task.\");\n    }\n    setShowForm(false);\n    setSelectedTask(null);\n    setUserAnswer(\"\");\n    setMistakes(0);\n    setTimeLeft(30);\n  };\n  const handleTaskClick = task => {\n    setSelectedTask(task);\n    setShowForm(true);\n    setTimeLeft(30); // Reset timer\n  };\n  useEffect(() => {\n    if (timeLeft === 0 && selectedTask) {\n      handleSubmit();\n    }\n    if (timeLeft > 0 && selectedTask) {\n      const timerId = setInterval(() => setTimeLeft(timeLeft - 1), 1000);\n      return () => clearInterval(timerId);\n    }\n  }, [timeLeft, selectedTask]);\n  const handleAnswerChange = e => {\n    const answer = e.target.value;\n    setUserAnswer(answer);\n\n    // Count mistakes\n    const correctWords = selectedTask.questionText.split(\" \");\n    const userWords = answer.split(\" \");\n    let mistakeCount = 0;\n    correctWords.forEach((word, index) => {\n      if (userWords[index] !== word) {\n        mistakeCount++;\n      }\n    });\n    setMistakes(mistakeCount);\n\n    // Auto-submit if answer is complete and correct\n    if (answer === selectedTask.questionText) {\n      handleSubmit();\n    }\n  };\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch(`/api/authh/alltaskget/${userID}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.ok) {\n        const fetchedTasks = await response.json();\n        setTasks(fetchedTasks);\n      } else {\n        const result = await response.json();\n        toast.error(result.message || \"Failed to fetch tasks.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error);\n      toast.error(\"An error occurred while fetching tasks.\");\n    }\n  };\n  useEffect(() => {\n    if (userID) {\n      fetchTasks();\n    }\n  }, [userID]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      minHeight: \"100vh\",\n      backgroundColor: \"#f5f5f5\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"25%\",\n        backgroundColor: \"#2c3e50\",\n        padding: \"20px\",\n        color: \"#ecf0f1\",\n        overflowY: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyleType: \"none\",\n          padding: 0\n        },\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              background: \"#34495e\",\n              border: \"none\",\n              padding: \"10px\",\n              textAlign: \"left\",\n              width: \"100%\",\n              cursor: \"pointer\",\n              marginBottom: \"5px\",\n              fontSize: \"16px\",\n              borderRadius: \"5px\",\n              color: \"#ecf0f1\"\n            },\n            onClick: () => handleTaskClick(task),\n            onMouseOver: e => {\n              e.currentTarget.style.backgroundColor = \"#1abc9c\";\n            },\n            onMouseOut: e => {\n              e.currentTarget.style.backgroundColor = \"#34495e\";\n            },\n            children: task.questionText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this)\n        }, task._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tasks found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"75%\",\n        padding: \"40px\"\n      },\n      children: showForm && selectedTask && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"#ecf0f1\",\n          padding: \"30px\",\n          borderRadius: \"10px\",\n          boxShadow: \"0px 0px 10px rgba(0, 0, 0, 0.1)\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedTask.questionText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Time left: \", timeLeft, \" seconds\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => e.preventDefault(),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Answer:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: userAnswer,\n              onChange: handleAnswerChange,\n              required: true,\n              style: {\n                width: \"100%\",\n                padding: \"10px\",\n                borderRadius: \"5px\",\n                border: \"1px solid #bdc3c7\",\n                fontSize: \"16px\",\n                minHeight: \"100px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Mistakes: \", mistakes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateTask, \"oij/1pY32QguZ8Hodj9Xx6QL/m8=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = CreateTask;\nexport default CreateTask;\nvar _c;\n$RefreshReg$(_c, \"CreateTask\");","map":{"version":3,"names":["React","useState","useEffect","toast","useAuth","useNavigate","jsxDEV","_jsxDEV","CreateTask","_s","questionText","setQuestionText","userID","setUserID","tasks","setTasks","selectedTask","setSelectedTask","userAnswer","setUserAnswer","mistakes","setMistakes","timeLeft","setTimeLeft","showForm","setShowForm","navigate","UserIDFROMLSGet","storedUserID","error","handleSubmit","taskData","taskID","_id","passed","response","fetch","method","headers","body","JSON","stringify","ok","success","result","json","message","console","handleTaskClick","task","timerId","setInterval","clearInterval","handleAnswerChange","e","answer","target","value","correctWords","split","userWords","mistakeCount","forEach","word","index","fetchTasks","fetchedTasks","style","display","minHeight","backgroundColor","children","width","padding","color","overflowY","fileName","_jsxFileName","lineNumber","columnNumber","length","listStyleType","map","background","border","textAlign","cursor","marginBottom","fontSize","borderRadius","onClick","onMouseOver","currentTarget","onMouseOut","boxShadow","onSubmit","preventDefault","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/POOJA/newtask/client/src/Components/Addtask/Addtask.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useAuth } from \"../Store/authh\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst CreateTask = () => {\r\n  const [questionText, setQuestionText] = useState(\"\");\r\n  const [userID, setUserID] = useState(\"\");\r\n  const [tasks, setTasks] = useState([]);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [userAnswer, setUserAnswer] = useState(\"\");\r\n  const [mistakes, setMistakes] = useState(0);\r\n  const [timeLeft, setTimeLeft] = useState(30); // Timer starts at 30 seconds\r\n  const [showForm, setShowForm] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const { UserIDFROMLSGet } = useAuth();\r\n\r\n  useEffect(() => {\r\n    const storedUserID = UserIDFROMLSGet();\r\n    if (storedUserID) {\r\n      setUserID(storedUserID);\r\n    } else {\r\n      toast.error(\"Failed to retrieve user ID. Please log in again.\");\r\n      navigate(\"/login\");\r\n    }\r\n  }, [UserIDFROMLSGet, navigate]);\r\n\r\n  const handleSubmit = async () => {\r\n    const taskData = {\r\n      userID,\r\n      taskID: selectedTask._id,\r\n      mistakes,\r\n      passed: mistakes === 0 && timeLeft > 0,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\"/api/authh/updateTaskStatus\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(taskData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        toast.success(\"Task completed successfully!\");\r\n      } else {\r\n        const result = await response.json();\r\n        toast.error(result.message || \"Failed to update task status.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating task status:\", error);\r\n      toast.error(\"An error occurred while updating the task.\");\r\n    }\r\n\r\n    setShowForm(false);\r\n    setSelectedTask(null);\r\n    setUserAnswer(\"\");\r\n    setMistakes(0);\r\n    setTimeLeft(30);\r\n  };\r\n\r\n  const handleTaskClick = (task) => {\r\n    setSelectedTask(task);\r\n    setShowForm(true);\r\n    setTimeLeft(30); // Reset timer\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (timeLeft === 0 && selectedTask) {\r\n      handleSubmit();\r\n    }\r\n\r\n    if (timeLeft > 0 && selectedTask) {\r\n      const timerId = setInterval(() => setTimeLeft(timeLeft - 1), 1000);\r\n      return () => clearInterval(timerId);\r\n    }\r\n  }, [timeLeft, selectedTask]);\r\n\r\n  const handleAnswerChange = (e) => {\r\n    const answer = e.target.value;\r\n    setUserAnswer(answer);\r\n\r\n    // Count mistakes\r\n    const correctWords = selectedTask.questionText.split(\" \");\r\n    const userWords = answer.split(\" \");\r\n    let mistakeCount = 0;\r\n\r\n    correctWords.forEach((word, index) => {\r\n      if (userWords[index] !== word) {\r\n        mistakeCount++;\r\n      }\r\n    });\r\n\r\n    setMistakes(mistakeCount);\r\n\r\n    // Auto-submit if answer is complete and correct\r\n    if (answer === selectedTask.questionText) {\r\n      handleSubmit();\r\n    }\r\n  };\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const response = await fetch(`/api/authh/alltaskget/${userID}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const fetchedTasks = await response.json();\r\n        setTasks(fetchedTasks);\r\n      } else {\r\n        const result = await response.json();\r\n        toast.error(result.message || \"Failed to fetch tasks.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching tasks:\", error);\r\n      toast.error(\"An error occurred while fetching tasks.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userID) {\r\n      fetchTasks();\r\n    }\r\n  }, [userID]);\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", minHeight: \"100vh\", backgroundColor: \"#f5f5f5\" }}>\r\n      <div\r\n        style={{\r\n          width: \"25%\",\r\n          backgroundColor: \"#2c3e50\",\r\n          padding: \"20px\",\r\n          color: \"#ecf0f1\",\r\n          overflowY: \"auto\",\r\n        }}\r\n      >\r\n        <h2>Your Tasks</h2>\r\n        {tasks.length > 0 ? (\r\n          <ul style={{ listStyleType: \"none\", padding: 0 }}>\r\n            {tasks.map((task) => (\r\n              <li key={task._id}>\r\n                <button\r\n                  style={{\r\n                    background: \"#34495e\",\r\n                    border: \"none\",\r\n                    padding: \"10px\",\r\n                    textAlign: \"left\",\r\n                    width: \"100%\",\r\n                    cursor: \"pointer\",\r\n                    marginBottom: \"5px\",\r\n                    fontSize: \"16px\",\r\n                    borderRadius: \"5px\",\r\n                    color: \"#ecf0f1\",\r\n                  }}\r\n                  onClick={() => handleTaskClick(task)}\r\n                  onMouseOver={(e) => {\r\n                    e.currentTarget.style.backgroundColor = \"#1abc9c\";\r\n                  }}\r\n                  onMouseOut={(e) => {\r\n                    e.currentTarget.style.backgroundColor = \"#34495e\";\r\n                  }}\r\n                >\r\n                  {task.questionText}\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>No tasks found.</p>\r\n        )}\r\n      </div>\r\n\r\n      <div style={{ width: \"75%\", padding: \"40px\" }}>\r\n        {showForm && selectedTask && (\r\n          <div\r\n            style={{\r\n              backgroundColor: \"#ecf0f1\",\r\n              padding: \"30px\",\r\n              borderRadius: \"10px\",\r\n              boxShadow: \"0px 0px 10px rgba(0, 0, 0, 0.1)\",\r\n            }}\r\n          >\r\n            <h2>{selectedTask.questionText}</h2>\r\n            <p>Time left: {timeLeft} seconds</p>\r\n            <form onSubmit={(e) => e.preventDefault()}>\r\n              <div>\r\n                <label>Answer:</label>\r\n                <textarea\r\n                  value={userAnswer}\r\n                  onChange={handleAnswerChange}\r\n                  required\r\n                  style={{\r\n                    width: \"100%\",\r\n                    padding: \"10px\",\r\n                    borderRadius: \"5px\",\r\n                    border: \"1px solid #bdc3c7\",\r\n                    fontSize: \"16px\",\r\n                    minHeight: \"100px\",\r\n                  }}\r\n                />\r\n              </div>\r\n            </form>\r\n            <p>Mistakes: {mistakes}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateTask;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}